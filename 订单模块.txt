*** Settings ***
Suite Setup       setup
Suite Teardown    teardown
Test Setup        case_setup_o
Test Teardown     case_teardown_o
Library           SeleniumLibrary
Library           OperatingSystem
Library           DatabaseLibrary
Resource          mtres.txt
Library           AutoItLibrary
Library           DebugLibrary
Library           CSVLibrary
Variables         lib/var.py

*** Test Cases ***
case01
    [Documentation]    xxx购物车基本功能
    [Tags]    high
    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile1' and quantity='10';    #计算行数
    ${y}    Evaluate    str($RowCount+1)    #转换数据类型
    log    2.点击自动化测试课程
    Click Element    link=自动化测试课程    #文本节点
    Click Element    partial link=邮件    #部分链接，找出不同的地方
    Click Link    自动化测试课程
    log    3.输入购买名称及数量
    Wait Until Element Is Visible    name=pay    #等待15秒，检查页面最后一个元素加载完成
    Input Text    id=ProductName    mobile1
    Input Text    name=Quantity    10
    log    4.点击提交
    Click Element    id=submitBtn
    log    5.确认提交成功
    log    5.1确认前端提示信息正确
    Wait Until Page Contains    你购买了mobile1，一共10件。    #显式等待后台处理15秒，检查提示信息
    Page Should Contain    你购买了mobile1，一共10件。
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了mobile1，一共10件。
    log    5.2确认前端购物车信息正确
    Select Frame    id=fra    #进入frame/iframe,带个参数定位符
    Select From List By Label    id=buy    产品:mobile1,数量:10    #使用不变的元素来处理select下拉列表
    log    5.3确认后台数据库订单表数据信息正确
    comment    Comment    PAUSE    #打断点
    Wait Until Keyword Succeeds    30    1    Check If Exists In Database    select name,quantity from scott.order_item where name='mobile1' and quantity='10';    #确认至少有一行    #显示等待数据库处理成功
    Row Count Is Equal To X    select name,quantity from scott.order_item where name='mobile1' and quantity='10';    ${y}    #确认有且只有一行，检查是否有重复的数据
    Comment    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile1' and quantity='10';    #注释
    log    6.点击付款
    Unselect Frame    #退出frame/iframe
    Click Element    name=pay    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框,确定，取消
    log    7.切换到付款窗口
    comment    Select Window    付款    #选择title为付款的窗口
    ${x}    Get Window Handles    #获得窗口的句柄
    Select Window    ${x[-1]}    #处理没有title的窗口
    Maximize Browser Window    #窗口最大化
    sleep    2    #强制等待
    log    8.输入银行卡号，完成付款
    Wait Until Element Is Visible    name=payfor    #等待15秒，检查页面加载完成
    Select From List By Label    id=bank    农业银行    #选择付款银行
    Input Text    id=cardno    123456789
    Click Element    name=payfor    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    Execute Sql String    delete from order_item where name='mobile1' and quantity='10';    #清理脏数据
    Select Window
    Comment    Click Element    id=datepicker
    Comment    Click Element    xpath=//*[@id="ui-datepicker-div"]/table/tbody/tr[5]/td[3]/a    #日期控件
    Execute Javascript    document.getElementById('datepicker').readOnly=false    #执行js
    Input Text    id=datepicker    07/08/2018    #输入日期
    sleep    5

case02
    [Documentation]    xxx购物车基本功能
    [Tags]
    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #计算行数
    ${y}    Evaluate    str($RowCount+1)
    log    2.点击自动化测试课程
    Click Element    link=自动化测试课程    #文本节点
    comment    Click Element    css=body > div > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    comment    Click Element    xpath=/html/body/div[1]/div[1]/div/div/div/ul/li[3]/a    #xpath定位符
    Click Element    partial link=邮件    #部分链接，找出不同的地方
    Click Link    自动化测试课程
    log    3.输入购买名称及数量
    Input Text    id=ProductName    mobile
    comment    Input Text    css=#ProductName    mobile11
    Input Text    name=Quantity    100
    comment    Input Text    xpath=//*[@id="Quantity"]    100
    log    4.点击提交
    Click Element    id=submitBtn
    log    5.确认提交成功
    log    5.1确认前端提示信息正确
    Page Should Contain    你购买了mobile，一共100件。
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了mobile，一共100件。
    log    5.2确认前端购物车信息正确
    Select Frame    id=fra    #进入frame/iframe,带个参数定位符
    Select From List By Label    id=buy    产品:mobile,数量:100    #使用不变的元素来处理select下拉列表
    log    5.3确认后台数据库订单表数据信息正确
    comment    Comment    PAUSE    #打断点
    Check If Exists In Database    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #确认至少有一行
    Row Count Is Equal To X    select name,quantity from scott.order_item where name='mobile' and quantity='100';    ${y}    #确认有且只有一行，检查是否有重复的数据
    Comment    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #注释
    log    6.点击付款
    Unselect Frame    #退出frame/iframe
    Click Element    name=pay    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    log    7.切换到付款窗口
    comment    Select Window    付款    #选择title为付款的窗口
    ${x}    Get Window Handles    #获得窗口的句柄
    Select Window    ${x[-1]}    #处理没有title的窗口
    Maximize Browser Window
    sleep    2
    log    8.输入银行卡号，完成付款
    Wait Until Element Is Visible    name=payfor
    Select From List By Label    id=bank    农业银行    #选择付款银行
    Input Text    id=cardno    123456789
    Click Element    name=payfor    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    Execute Sql String    delete from order_item where name='mobile' and quantity='100';    #清理脏数据
    log    ${xx}

case03
    [Documentation]    调用模板参数化
    [Template]    tpl_order
    : FOR    ${i}    IN    @{DATA_ORDER_CASE_03}    #数据驱动
    \    ${i[0]}    ${i[1]}

case04
    [Documentation]    xxx购物车基本功能
    [Tags]
    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #计算行数
    ${y}    Evaluate    str($RowCount+1)
    log    2.点击自动化测试课程
    Click Element    link=自动化测试课程    #文本节点
    comment    Click Element    css=body > div > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    comment    Click Element    xpath=/html/body/div[1]/div[1]/div/div/div/ul/li[3]/a    #xpath定位符
    Click Element    partial link=邮件    #部分链接，找出不同的地方
    Click Link    自动化测试课程
    log    3.输入购买名称及数量
    Execute Javascript    $('#ProductName').val('mobile')
    comment    Execute Javascript    document.getElementById('ProductName').value='mobile'    #通过js来操作页面
    comment    Input Text    css=#ProductName    mobile11    #通过css来定位
    Execute Javascript    $('#Quantity').val('100')
    comment    Execute Javascript    document.getElementById('Quantity').value='100'    #通过js来操作页面
    comment    Input Text    xpath=//*[@id="Quantity"]    100    #通过xpath来定位
    log    4.点击提交
    Click Element    id=submitBtn
    log    5.确认提交成功
    log    5.1确认前端提示信息正确
    Page Should Contain    你购买了mobile，一共100件。
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了mobile，一共100件。
    log    5.2确认前端购物车信息正确
    Select Frame    id=fra    #进入frame/iframe,带个参数定位符
    Select From List By Label    id=buy    产品:mobile,数量:100    #使用不变的元素来处理select下拉列表
    log    5.3确认后台数据库订单表数据信息正确
    comment    Comment    PAUSE    #打断点
    Check If Exists In Database    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #确认至少有一行
    Row Count Is Equal To X    select name,quantity from scott.order_item where name='mobile' and quantity='100';    ${y}    #确认有且只有一行，检查是否有重复的数据
    Comment    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #注释
    log    6.点击付款
    Unselect Frame    #退出frame/iframe
    Click Element    name=pay    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    log    7.切换到付款窗口
    comment    Select Window    付款    #选择title为付款的窗口
    ${x}    Get Window Handles    #获得窗口的句柄
    Select Window    ${x[-1]}    #处理没有title的窗口
    Maximize Browser Window
    sleep    2
    log    8.输入银行卡号，完成付款
    Wait Until Element Is Visible    name=payfor
    Select From List By Label    id=bank    农业银行    #选择付款银行
    Input Text    id=cardno    123456789
    Click Element    name=payfor    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    Execute Sql String    delete from order_item where name='mobile' and quantity='100';    #清理脏数据
    log    ${xx}

case05
    [Documentation]    上传文件
    log    2.点击自动化测试课程
    Click Link    自动化测试课程
    Wait Until Element Is Visible    link=上传下载demo页面
    Click Link    上传下载demo页面
    Wait Until Element Is Visible    link=下载测试
    Click Element    id=file
    Win Wait    打开    \    TimeOut=20
    Win Activate    打开
    Control Set Text    \    \    strControl=Edit1    strControlText=${CURDIR}${/}mtres.txt
    Control Click    \    \    strControl=Button1
    sleep    5
    Set Selenium Implicit Wait    0    #隐式等待时间,控制浏览器在定位失败时返回的相应时间

case06
    [Documentation]    xxx购物车基本功能
    [Tags]
    log    2.点击自动化测试课程
    Comment    Click Element    jquery=a:contains('自动化')
    Click Element    link=自动化测试课程
    log    3.输入购买名称及数量
    Input Text    ProductName    mobile
    Input Text    Quantity    100
    Comment    Execute Javascript    $('#ProductName').val('mobile')
    Comment    Execute Javascript    $('#Quantity').val('100')
    log    4.点击提交
    Click Element    submitBtn
    log    5.确认提交成功
    log    5.1确认前端提示信息正确
    Page Should Contain    你购买了mobile，一共100件。
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了mobile，一共100件。
    log    5.2确认前端购物车信息正确
    Select Frame    id=fra    #进入frame/iframe,带个参数定位符
    Select From List By Label    id=buy    产品:mobile,数量:100    #使用不变的元素来处理select下拉列表

case07
    [Documentation]    调用模板参数化
    [Template]    tpl_order
    苹果    100
    apple    200

*** Keywords ***
case_setup_o
    [Documentation]    用例
    Execute Sql String    delete from order_item;    #清理脏数据

case_teardown_o
    Select Window

tpl_order
    [Arguments]    ${pname}    ${quan}
    [Documentation]    模板
    log    2.点击自动化测试课程
    Click Element    link=自动化测试课程    #文本节点
    comment    Click Element    css=body > div > div.masthead > div > div > div > ul > li:nth-child(3) > a    #css选择器定位符
    comment    Click Element    xpath=/html/body/div[1]/div[1]/div/div/div/ul/li[3]/a    #xpath定位符
    Click Element    partial link=邮件    #部分链接，找出不同的地方
    Click Link    自动化测试课程
    log    3.输入购买名称及数量
    Input Text    id=ProductName    ${pname}
    comment    Input Text    css=#ProductName    mobile11
    Input Text    name=Quantity    ${quan}
    comment    Input Text    xpath=//*[@id="Quantity"]    100
    log    4.点击提交
    Click Element    id=submitBtn
    log    5.确认提交成功
    log    5.1确认前端提示信息正确
    sleep    2
    Page Should Contain    你购买了${pname}，一共${quan}件。
    ${x}    Get Text    id=msg    #检查方式2
    Should Be Equal    ${x}    你购买了${pname}，一共${quan}件。
    log    5.2确认前端购物车信息正确
    Select Frame    id=fra    #进入frame/iframe,带个参数定位符
    Select From List By Label    id=buy    产品:${pname},数量:${quan}    #使用不变的元素来处理select下拉列表
    log    5.3确认后台数据库订单表数据信息正确
    comment    Comment    PAUSE    #打断点
    Check If Exists In Database    select name,quantity from scott.order_item where name='${pname}' and quantity='${quan}';    #确认至少有一行
    Comment    ${RowCount}    Row Count    select name,quantity from scott.order_item where name='mobile' and quantity='100';    #注释
    log    6付款
    Unselect Frame
    Click Element    name=pay    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    log    7.切换到付款窗口
    comment    Select Window    付款    #选择title为付款的窗口
    ${x}    Get Window Handles    #获得窗口的句柄
    Select Window    ${x[-1]}    #处理没有title的窗口
    Maximize Browser Window
    sleep    2
    log    8.输入银行卡号，完成付款
    sleep    2
    Wait Until Element Is Visible    name=payfor
    Select From List By Label    id=bank    农业银行    #选择付款银行
    Input Text    id=cardno    123456789
    Click Element    name=payfor    #点击付款按钮
    Handle Alert    accept    #处理alert弹出框
    Execute Sql String    delete from order_item where name='${pname}' and quantity='${quan}';    #清理脏数据
    Select Window
